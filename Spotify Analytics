-- For this project I:
      - downloaded a Spotify dataset from Kaggle
      - created a table and imported the spotify data into the table
      - used SQL to analyze the data


-- Creating the table:
CREATE TABLE BIT_DB.SpotifyData (
id INTEGER PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal (4,3) NOT NULL,
energy decimal (4,3) NOT NULL,
key integer NOT NULL,
loudness decimal (5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal (5,4) NOT NULL,
acousticness decimal (6,5) NOT NULL,
instrumentalness decimal (8,6) NOT NULL,
liveness decimal (5,4) NOT NULL,
valence decimal (4,3) NOT NULL,
tempo decimal (6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL
);
-- Inserted the Spotify.csv data into the table

-- Used SQL to analyze the data:
SELECT *
FROM SpotifyData;

  -- what are the top 5 songs and artists based on popularity
SELECT track_name,
 artist_name, 
 popularity
FROM SpotifyData
ORDER BY popularity desc
LIMIT 5
;

  -- what artists have more than 1 song on the Spotify 2021 Top 50 list and how many songs do they have
SELECT 
artist_name,
COUNT(track_name) as Number_of_songs
FROM SpotifyData
GROUP BY artist_name
HAVING COUNT(track_name) > 1
ORDER BY Number_of_songs desc
;

  -- what is the average duration, tempo, energy of songs in the Top 50 list
SELECT
avg(duration_ms),
avg(danceability),
avg(energy),
avg(valence)
FROM SpotifyData
;

  -- I want to create a playlist for a dance party and I only want songs that get everyone out on the dance floor (aka bangers). we can get rid of everything else
SELECT
track_name,
artist_name,
danceability,
CASE
    WHEN danceability > 0.68572 THEN "Banger"
    WHEN danceability < 0.68572 AND danceability > 0.5555 THEN "Bop"
    ELSE "Water Break"
    END AS "Dance_Playlist_Ranking"
FROM SpotifyData
WHERE Dance_Playlist_Ranking = "Banger"
;
